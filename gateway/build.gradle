plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
    id "com.gorylenko.gradle-git-properties" version "${gitPropertiesVersion}"
    id 'pl.allegro.tech.build.axion-release' version "${axionPluginVersion}"
    id 'java'
}

sourceCompatibility = JavaVersion.VERSION_11

scmVersion {
    tag { prefix = project.name + '-' }
    versionIncrementer 'incrementMinor'
}
project.version = scmVersion.version

def commonJarConfigClosure = {
    archiveName = "${project.name}.jar"
}

bootJar commonJarConfigClosure

springBoot {
    buildInfo {
        properties {
            version = project.version
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "org.springframework.cloud:spring-cloud-starter-gateway:${gatewayVersion}" // not resolved by dependency-management plugin
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${eurekaClientVersion}" // not resolved by dependency-management plugin

    implementation "io.micrometer:micrometer-registry-prometheus"
}

test {
    useJUnitPlatform()
}